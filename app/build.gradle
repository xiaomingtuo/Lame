apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "24.0.2"
    defaultConfig {
        applicationId "com.tcl.mie.jnidemo"
        minSdkVersion 17
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            moduleName "lame"
            ldLibs "log"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni', 'src/main/jni/']
            jniLibs.srcDirs = ['libs']
        }
    }
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}
//
//task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//    def ndkDir = android.ndkDirectory
//
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                '-j', Runtime.runtime.availableProcessors(),
//                'all',
//                'NDK_DEBUG=1'
//    } else {
//        commandLine "$ndkDir/ndk-build",
//                '-C', file('src/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                '-j', Runtime.runtime.availableProcessors(),
//                'all',
//                'NDK_DEBUG=1'
//    }
//}
////在 mac 中 commandLine "$ndkDir/ndk-build", 但是在windows中 commandLine "$ndkDir/ndk-build.cmd",额，坑
////
//task cleanNative(type: Exec, description: 'Clean JNI object files') {
//    def ndkDir = android.ndkDirectory
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    } else {
//        commandLine "$ndkDir/ndk-build.cmd",
//                '-C', file('src/jni').absolutePath, // Change src/main/jni the relative path to your jni source
//                'clean'
//    }
//}
////
//clean.dependsOn 'cleanNative'
//
//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn buildNative
//}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:23.4.0'
    testCompile 'junit:junit:4.12'
}
